runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
rm(list = ls())
shiny::runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
source(file.path("ui", "sidebar_ui.R"), local = TRUE)$value,
shiny::runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
shiny::runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
connections <- data.table::data.table(ind0 = 1:3, ind=2:3, player = c(1, 2, 2))
connections <- data.table::data.table(ind0 = 1:3, ind=2:4, player = c(1, 2, 2))
connections
connections[player==1, rbind(ind0, ind, NA)]
connections[player==2, rbind(ind0, ind, NA)]
c(connections[player==2, rbind(ind0, ind, NA)])
connections <- rbind(connections, c(1, 2, 1))
connections
class(connections)
connections <- rbind(connections, list(1, 2, 1))
connections
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
source('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test/www/functions/game_graphics.R')
source('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test/www/functions/game_graphics.R')
plot(c(1, 1), c(1, 1), type="l")
connections
connections[, rbind(ind0, ind, NA)]
rbind(connections$ind0, connections$ind, NA)
c(rbind(connections$ind0, connections$ind, NA))
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
runApp('C:/Dropbox/GitHub/Games.ai/Ultimate-Connect-Four/R Shiny/Module Test')
x <- list(a=1,b=2,c=3)
with(x, {})
shiny::runApp('GitHub/Games.ai/Cell Division')
shiny::runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/BLS_App')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/BLS_App')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('GitHub/Games.ai/Cell Division')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/BLS App New')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/BLS App New')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
library(xlsx)
library(data.table)
library(stringr)
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
library(xlsx)
library(data.table)
library(stringr)
library(xlsx)
library(data.table)
library(stringr)
install.packages("rJava")
install.packages(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsx)
install.packages("rJava")
library(xlsx)
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
install.packages("rJava")
install.packages("xlsx")
library(xlsx)
shiny::runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
gameUI <- function(id, tab_name, tab_icon) {
diff(c(1,2))
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
diff(c(2, 1))
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
c(1,2,3)[0]
c(1,2,3)[0] <- 1
order(c(1,3,2))
order(c(1,3,2,6,3,1,2))
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
60/11
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
shiny::runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Salary Study Dashboard')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
rm(list = ls())
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
allData <- fread(file.path("www", "data_files", "Preprocessed BLS Data.csv"), stringsAsFactors = FALSE)
names(allData)[17:22] <- c("Ref.H_Min", "Ref.H_Mid", "Ref.H_Max", "Ref.A_Min", "Ref.A_Mid", "Ref.A_Max")
allData <- allData[complete.cases(allData),]
shiny::runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
library(png)
# read a sample file (R logo)
img <- readPNG("single_cell.png")
image(img[, , 1])
ind <- which(img[, , 1] !=0)
row = ((ind-1) %% 1000) + 1
col = floor((ind-1) / 1000) + 1
shiny::runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
img
?img
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('GitHub/shiny-apps/run_alfresco')
install.packages("assertiv e")
install.packages("assertive")
runApp('GitHub/shiny-apps/run_alfresco')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('GitHub/Games.ai/Cell Division')
(1:10)*(10:1)
sum((1:10)*(10:1))
cbind(1:10, 10:1)
cbind(1:10, 10:1)*(0.1,0.2)
cbind(1:10, 10:1)*c(0.1,0.2)
cbind(1:10, 10:1)%*%c(0.1,0.2)
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('GitHub/Games.ai/Cell Division')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
runApp('C:/Dropbox/HIVET/Salary Compensation/R Shiny/Market Analysis Tool')
# plotting parameters
n_points <- 100
color <- "gray"
#----------------
# square
r <- 0.2
square_cell <- function(r, n_points) {
R <- rep(r, n_points/4)
theta <- seq(0, 2*pi, length.out = n_points)
# centered outline
x <- r*cos(theta) + c(1-R, R, R, 1-R) - 0.5
y <- r*sin(theta) + c(1-R, 1-R, R, R) - 0.5
# scale to unit length
x <- x/(max(x) - min(x))
y <- y/(max(y) - min(y))
cbind(x, y)
}
# plot a single square cell
plot(1, type="n", asp=1,
yaxs="i", xaxs="i", xlab = "", ylab = "",
xlim = c(-0.6, 0.6), ylim = c(-0.6, 0.6)
)
abline(h=c(-0.5, 0.5), v=c(-0.5, 0.5))
sq_outline <- square_cell(r, n_points)
sq_x <- sq_outline[, 1]
sq_y <- sq_outline[, 2]
polygon(sq_x, sq_y, col=color, lwd=2)
#----------------
# triangular
r <- 0.2
r2 <- 0.15
triangular_cell <- function(r, r2, n_points) {
R <- rep(r, n_points/4)
R2 <- rep(r2, n_points/4)
theta <- c(seq(0, pi/2, length.out = n_points/4),
seq(pi/2, 5*pi/4, length.out = n_points/4),
seq(5*pi/4, 2*pi, length.out = n_points/4))
# center outline
x <- c(R, R2, R2)*cos(theta) + c(1-R, R2*(1+sqrt(2)),  1-R2) - 0.5
y <- c(R, R2, R2)*sin(theta) + c(1-R, 1-R2,  R2*(1+sqrt(2))) - 0.5
cbind(x, y)
}
# plot a dual triangular cells
plot(1, type="n", asp=1,
yaxs="i", xaxs="i", xlab = "", ylab = "",
xlim = c(-0.6, 0.6), ylim = c(-0.6, 0.6)
)
abline(h=c(-0.5, 0.5), v=c(-0.5, 0.5))
tri_outline <- triangular_cell(r, r2, n_points)
tri_x <- tri_outline[, 1]
tri_y <- tri_outline[, 2]
polygon(tri_x, tri_y, col=color, lwd=2)
polygon(-tri_x, -tri_y, col=color, lwd=2)
#----------------
# quadrilateral
r  <- 0.1
r2 <- 0.075
quad_cell <- function(r, r2, n_points) {
R <- rep(r, n_points/4)
R2 <- rep(r, n_points/4)
theta <- c(seq(0, pi/2, length.out = n_points/4),
seq(pi/2, pi, length.out = n_points/4),
seq(pi, 5*pi/4, length.out = n_points/4),
seq(5*pi/4, 2*pi, length.out = n_points/4))
x <- c(R, R, R, R2)*cos(theta) + c(1-R, 0.5+R, 0.5+R, 1-R2) - 0.5
y <- c(R, R ,R, R2)*sin(theta) + c(1-R, 1-R, 0.5 + R*(sqrt(2)-1), R2*(1+sqrt(2))) - 0.5
cbind(x, y)
}
# plot quad with tris
plot(1, type="n", asp=1,
yaxs="i", xaxs="i", xlab = "", ylab = "",
xlim = c(-0.6, 0.6), ylim = c(-0.6, 0.6)
)
abline(h=c(-0.5, 0.5), v=c(-0.5, 0.5))
quad_outline <- quad_cell(r, r2, n_points)
quad_x <- quad_outline[, 1]
quad_y <- quad_outline[, 2]
polygon(quad_x, quad_y, col=color, lwd=2)
polygon(-quad_x, -quad_y, col=color, lwd=2)
tri_outline <- triangular_cell(0.2, 0.15, n_points)
tri_x <- tri_outline[, 1]
tri_y <- tri_outline[, 2]
polygon(0.5*(tri_x-0.5), 0.5*(tri_y+0.5), col=color, lwd=2)
polygon(0.5-0.5*(tri_x+0.5), 0.5*(0.5-tri_y)-0.5, col=color, lwd=2)
tri_outline <- triangular_cell(0.2, 0.1, n_points)
tri_x <- tri_outline[, 1]
tri_y <- tri_outline[, 2]
polygon(0.5*(tri_x-0.5), 0.5*(tri_y+0.5), col=color, lwd=2)
polygon(0.5-0.5*(tri_x+0.5), 0.5*(0.5-tri_y)-0.5, col=color, lwd=2)
# plot quad with tris
plot(1, type="n", asp=1,
yaxs="i", xaxs="i", xlab = "", ylab = "",
xlim = c(-0.6, 0.6), ylim = c(-0.6, 0.6)
)
abline(h=c(-0.5, 0.5), v=c(-0.5, 0.5))
quad_outline <- quad_cell(r, r2, n_points)
quad_x <- quad_outline[, 1]
quad_y <- quad_outline[, 2]
polygon(quad_x, quad_y, col=color, lwd=2)
polygon(-quad_x, -quad_y, col=color, lwd=2)
tri_outline <- triangular_cell(0.2, 0.15, n_points)
tri_x <- tri_outline[, 1]
tri_y <- tri_outline[, 2]
polygon(0.5*(tri_x-0.5), 0.5*(tri_y+0.5), col=color, lwd=2)
polygon(0.5-0.5*(tri_x+0.5), 0.5*(0.5-tri_y)-0.5, col=color, lwd=2)
source('~/GitHub/Games.ai/Cell Division/extras/single_cell_design.R')
source('~/GitHub/Games.ai/Cell Division/extras/single_cell_design.R')
# plot a dual triangular cells
plot(1, type="n", asp=1,
yaxs="i", xaxs="i", xlab = "", ylab = "",
xlim = c(-0.6, 0.6), ylim = c(-0.6, 0.6)
)
abline(h=c(-0.5, 0.5), v=c(-0.5, 0.5))
tri_outline <- triangular_cell(0.1, 0.15, n_points)
tri_x <- tri_outline[, 1]
tri_y <- tri_outline[, 2]
polygon(tri_x, tri_y, col=color, lwd=2)
polygon(-tri_x, -tri_y, col=color, lwd=2)
# plot a dual triangular cells
plot(1, type="n", asp=1,
yaxs="i", xaxs="i", xlab = "", ylab = "",
xlim = c(-0.6, 0.6), ylim = c(-0.6, 0.6)
)
abline(h=c(-0.5, 0.5), v=c(-0.5, 0.5))
tri_outline <- triangular_cell(0.1, 0.1, n_points)
tri_x <- tri_outline[, 1]
tri_y <- tri_outline[, 2]
polygon(tri_x, tri_y, col=color, lwd=2)
polygon(-tri_x, -tri_y, col=color, lwd=2)
source('~/GitHub/Games.ai/Cell Division/extras/single_cell_design.R')
source("single_cell_design.R")
setwd("C:/Users/Matt/Documents/GitHub/Games.ai/Cell Division/www/Rmarkdown/cells/")
setwd("..")
source('~/GitHub/Games.ai/Cell Division/extras/vertical_cell_count.R')
source('~/GitHub/Games.ai/Cell Division/extras/vertical_cell_count.R')
source('~/GitHub/Games.ai/Cell Division/extras/vertical_cell_count.R')
source('~/GitHub/Games.ai/Cell Division/extras/vertical_cell_count.R')
source('~/GitHub/Games.ai/Cell Division/extras/diagonal_cell_count.R')
