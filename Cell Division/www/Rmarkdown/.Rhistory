plot_cell(sq_x, sq_y, color)
library(png)
filepath <- "C:/Users/Matt/Documents/GitHub/Games.ai/Cell Division/extras/"
savepath <- "C:/Users/Matt/Documents/GitHub/Games.ai/Cell Division/www/Rmarkdown/cells/"
source(paste0(filepath, "single_cell_design.R"))
# plotting parameters
n_pnts <- 100
color <- c(34/255,250/255,34/255)
#------------------
# plotting functions
# get center of mass
com_calc <- function(x, y) {
# plot shape
png('temp.png', width = 1000, height = 1000)
par(mar=c(0,0,0,0), bg="NA")
plot(1, type="n", asp=1, axes = FALSE,
yaxs="i", xaxs="i", xlab = "", ylab = "",
xlim = c(0, 1), ylim = c(0, 1)
)
polygon(x, y, col=rgb(0,0,0), border=NA)
dev.off()
img <- 1*(readPNG("temp.png")[, , 4]>0.5)
img <- img/sum(img)
com_x <- sum(img %*% seq(0, 1, length=dim(img)[1]))
com_y <- 1-sum(t(img) %*% seq(0, 1, length=dim(img)[1]))
print(c(com_x, com_y))
c(com_x, com_y)
}
plot_cell <- function(x, y, color) {
# start with all black cell
polygon(x, y, col="black", border=NA)
# get center of mass
com <- com_calc(x, y)
# add shadow
n_layers <- 100
shink <- seq(1, 0,length=n_layers)
alpha <- seq(0.1, 1, length=n_layers)
for (k in 1:n_layers) {
polygon(shink[k]*(x-com[1])+com[1], shink[k]*(y-com[2])+com[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
# add shine
n_layers <- 25
shink <- seq(0.25, 0.85, length=n_layers)^2
alpha <- seq(0.01, 0.05, length=n_layers)
color <- 0.5*color
for (k in 1:n_layers) {
polygon(shink[k]*(x-com[1])+com[1], shink[k]*(y-com[2])+com[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
}
blank_plot <- function() {
par(mar=c(0,0,0,0), bg=NA)
plot(1, type="n", asp=1, axes=FALSE,
yaxs="i", xaxs="i", xlab = "", ylab = "",
xlim = c(0, 2), ylim = c(0, 2)
)
}
#------------------
# cell definitions
# square cell
sq_outline <- square_cell(0.2, 100)
sq_x <- sq_outline[, 1] + 0.5
sq_y <- sq_outline[, 2] + 0.5
# trianglular cell
tri_outline <- triangular_cell(0.3, 0.1, n_pnts)
tri_x <- tri_outline[, 1]+0.5
tri_y <- tri_outline[, 2]+0.5
# side trianglular cell
side_tri_outline <- side_triangular_cell(0.1, 0.3, n_pnts)
side_tri_x <- side_tri_outline[, 1]+0.5
side_tri_y <- side_tri_outline[, 2]+0.5
# small trianglular cell
sm_tri_outline <- triangular_cell(0.3, 0.2, n_pnts)
sm_tri_x <- 0.5*(sm_tri_outline[, 1]+0.5)
sm_tri_y <- 0.5*(sm_tri_outline[, 2]+0.5)
#------------------
# plot the progression
graphics.off()
blank_plot()
plot_cell(sq_x, sq_y, color)
library(png)
filepath <- "C:/Users/Matt/Documents/GitHub/Games.ai/Cell Division/extras/"
savepath <- "C:/Users/Matt/Documents/GitHub/Games.ai/Cell Division/www/Rmarkdown/cells/"
source(paste0(filepath, "single_cell_design.R"))
# plotting parameters
n_pnts <- 100
cellgreen <- c(54/255,230/255,54/255)
cellred <- c(230/255,142/255,54/255)
#------------------
# plotting functions
# get center of mass
com_calc <- function(x, y) {
# plot shape
png('temp.png', width = 1000, height = 1000)
par(mar=c(0,0,0,0), bg="NA")
plot(1, type="n", asp=1, axes = FALSE,
yaxs="i", xaxs="i", xlab = "", ylab = "",
xlim = c(0, 1), ylim = c(0, 1)
)
polygon(x, y, col=rgb(0,0,0), border=NA)
dev.off()
img <- 1*(readPNG("temp.png")[, , 4]>0.5)
img <- img/sum(img)
com_x <- sum(img %*% seq(0, 1, length=dim(img)[1]))
com_y <- 1-sum(t(img) %*% seq(0, 1, length=dim(img)[1]))
print(c(com_x, com_y))
c(com_x, com_y)
}
plot_cell <- function(x, y, cellgreen) {
# start with all black cell
polygon(x, y, col="black", border=NA)
# get center of mass
com <- com_calc(x, y)
# add shadow
n_layers <- 100
shink <- seq(1, 0,length=n_layers)
alpha <- seq(0.1, 1, length=n_layers)
for (k in 1:n_layers) {
polygon(shink[k]*(x-com[1])+com[1], shink[k]*(y-com[2])+com[2],
col=rgb(cellgreen[1], cellgreen[2], cellgreen[3], alpha[k]),
border=NA)
}
# add shine
n_layers <- 25
shink <- seq(0.25, 0.85, length=n_layers)^2
alpha <- seq(0.01, 0.05, length=n_layers)
cellgreen <- 0.5*cellgreen
for (k in 1:n_layers) {
polygon(shink[k]*(x-com[1])+com[1], shink[k]*(y-com[2])+com[2],
col=rgb(cellgreen[1], cellgreen[2], cellgreen[3], alpha[k]),
border=NA)
}
}
blank_plot <- function() {
par(mar=c(0,0,0,0), bg=NA)
plot(1, type="n", asp=1, axes=FALSE,
yaxs="i", xaxs="i", xlab = "", ylab = "",
xlim = c(0, 2), ylim = c(0, 2)
)
}
#------------------
# cell definitions
# square cell
sq_outline <- square_cell(0.2, 100)
sq_x <- sq_outline[, 1] + 0.5
sq_y <- sq_outline[, 2] + 0.5
# trianglular cell
tri_outline <- triangular_cell(0.3, 0.1, n_pnts)
tri_x <- tri_outline[, 1]+0.5
tri_y <- tri_outline[, 2]+0.5
# side trianglular cell
side_tri_outline <- side_triangular_cell(0.1, 0.3, n_pnts)
side_tri_x <- side_tri_outline[, 1]+0.5
side_tri_y <- side_tri_outline[, 2]+0.5
# small trianglular cell
sm_tri_outline <- triangular_cell(0.3, 0.2, n_pnts)
sm_tri_x <- 0.5*(sm_tri_outline[, 1]+0.5)
sm_tri_y <- 0.5*(sm_tri_outline[, 2]+0.5)
graphics.off()
blank_plot()
plot_cell(sq_x+0.5, sq_y, cellgreen)
#------------------
# cell definitions
# square cell
sq_outline <- square_cell(0.2, 100)
sq_x <- sq_outline[, 1] + 0.5
sq_y <- sq_outline[, 2] + 0.5
# trianglular cell
tri_outline <- triangular_cell(0.3, 0.1, n_pnts)
tri_x <- tri_outline[, 1]+0.5
tri_y <- tri_outline[, 2]+0.5
# small square cell
sm_sq_outline <- square_cell(0.4, 100)
sm_sq_x <- 0.5*(sm_sq_outline[, 1] + 0.5)
sm_sq_y <- 0.5*(sm_sq_outline[, 2] + 0.5)
# small trianglular cell
sm_tri_outline <- triangular_cell(0.3, 0.2, n_pnts)
sm_tri_x <- 0.5*(sm_tri_outline[, 1]+0.5)
sm_tri_y <- 0.5*(sm_tri_outline[, 2]+0.5)
graphics.off()
png(paste0(savepath, "cell_logo.png"))
dev.off()
blank_plot()
plot_cell(sq_x+0.5, sq_y, cellgreen)
source(paste0(filepath, "cell_plot_utils.R"))
blank_plot()
plot_cell(sq_x+0.5, sq_y, cellgreen)
filepath <- "C:/Users/Matt/Documents/GitHub/Games.ai/Cell Division/extras/"
savepath <- "C:/Users/Matt/Documents/GitHub/Games.ai/Cell Division/www/Rmarkdown/cells/"
source(paste0(filepath, "cell_plot_utils.R"))
#------------------
# cell definitions
# square cell
sq_outline <- square_cell(0.2, 100)
sq_x <- sq_outline[, 1] + 0.5
sq_y <- sq_outline[, 2] + 0.5
# trianglular cell
tri_outline <- triangular_cell(0.3, 0.1, n_pnts)
tri_x <- tri_outline[, 1]+0.5
tri_y <- tri_outline[, 2]+0.5
# small square cell
sm_sq_outline <- square_cell(0.4, 100)
sm_sq_x <- 0.5*(sm_sq_outline[, 1] + 0.5)
sm_sq_y <- 0.5*(sm_sq_outline[, 2] + 0.5)
# small trianglular cell
sm_tri_outline <- triangular_cell(0.3, 0.2, n_pnts)
sm_tri_x <- 0.5*(sm_tri_outline[, 1]+0.5)
sm_tri_y <- 0.5*(sm_tri_outline[, 2]+0.5)
blank_plot()
plot_cell(sq_x, sq_y, cellgreen)
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellgreen)
# square cell
sq_outline <- square_cell(0.2, 100)
sq_x <- 0.5*sq_outline[, 1] + 0.5
sq_y <- 0.5*sq_outline[, 2] + 0.5
# trianglular cell
tri_outline <- triangular_cell(0.3, 0.1, n_pnts)
tri_x <- 0.5*tri_outline[, 1]+0.5
tri_y <- 0.5*tri_outline[, 2]+0.5
# small square cell
sm_sq_outline <- square_cell(0.4, 100)
sm_sq_x <- 0.25*(sm_sq_outline[, 1] + 0.5)
sm_sq_y <- 0.25*(sm_sq_outline[, 2] + 0.5)
# small trianglular cell
sm_tri_outline <- triangular_cell(0.3, 0.2, n_pnts)
sm_tri_x <- 0.25*(sm_tri_outline[, 1]+0.5)
sm_tri_y <- 0.25*(sm_tri_outline[, 2]+0.5)
plot_cell(sq_x, sq_y, cellgreen)
#------------------
# cell definitions
# square cell
sq_outline <- 0.5*square_cell(0.2, 100)
sq_x <- sq_outline[, 1] + 0.5
sq_y <- sq_outline[, 2] + 0.5
# trianglular cell
tri_outline <- 0.5*triangular_cell(0.3, 0.1, n_pnts)
tri_x <- tri_outline[, 1]+0.5
tri_y <- tri_outline[, 2]+0.5
# small square cell
sm_sq_outline <- 0.5*square_cell(0.4, 100)
sm_sq_x <- 0.5*(sm_sq_outline[, 1] + 0.5)
sm_sq_y <- 0.5*(sm_sq_outline[, 2] + 0.5)
# small trianglular cell
sm_tri_outline <- 0.5*triangular_cell(0.3, 0.2, n_pnts)
sm_tri_x <- 0.5*(sm_tri_outline[, 1]+0.5)
sm_tri_y <- 0.5*(sm_tri_outline[, 2]+0.5)
#------------------
# plot the progression
# graphics.off()
# one
# png(paste0(savepath, "cell_logo.png"))
blank_plot()
plot_cell(sq_x, sq_y, cellgreen)
abline(h=c(0,1), v=c(0,1))
#------------------
# cell definitions
# square cell
sq_outline <- square_cell(0.2, 100)
sq_x <- 0.5*(sq_outline[, 1] + 0.5)
sq_y <- 0.5*(sq_outline[, 2] + 0.5)
# trianglular cell
tri_outline <- 0.5*triangular_cell(0.3, 0.1, n_pnts)
tri_x <- 0.5*(tri_outline[, 1]+0.5)
tri_y <- 0.5*(tri_outline[, 2]+0.5)
# small square cell
sm_sq_outline <- square_cell(0.4, 100)
sm_sq_x <- 0.25*(sm_sq_outline[, 1] + 0.5)
sm_sq_y <- 0.25*(sm_sq_outline[, 2] + 0.5)
# small trianglular cell
sm_tri_outline <- triangular_cell(0.3, 0.2, n_pnts)
sm_tri_x <- 0.25*(sm_tri_outline[, 1]+0.5)
sm_tri_y <- 0.25*(sm_tri_outline[, 2]+0.5)
#------------------
# plot the progression
# graphics.off()
# one
# png(paste0(savepath, "cell_logo.png"))
blank_plot()
plot_cell(sq_x, sq_y, cellgreen)
abline(h=c(0,1), v=c(0,1))
plot_cell(sq_x+0.5, sq_y, cellorange)
abline(h=c(0,1), v=c(0,1))
plot_cell(sq_x+0.5, sq_y, cellred)
quad_outline <- quad_cell(0.15, 0.05, n_pnts)
quad_x <- quad_outline[, 1]
quad_y <- quad_outline[, 2]
# quadrilateral cell
quad_outline <- quad_cell(0.15, 0.05, n_pnts)
quad_x <- quad_outline[, 1]
quad_y <- quad_outline[, 2]
plot_cell(quad_x, quad_y, cellred)
quad_x <- 0.5*quad_outline[, 1]
quad_y <- 0.5*quad_outline[, 2]
blank_plot()
plot_cell(sq_x+0.5, sq_y, cellred)
plot_cell(quad_x, quad_y, cellred)
# quadrilateral cell
quad_outline <- quad_cell(0.15, 0.05, n_pnts)
quad_x <- 0.5*(quad_outline[, 1]+0.5)
quad_y <- 0.5*(quad_outline[, 2]+0.5)
#------------------
# plot the progression
# graphics.off()
# one
# png(paste0(savepath, "cell_logo.png"))
blank_plot()
plot_cell(sq_x+0.5, sq_y, cellred)
plot_cell(quad_x, quad_y, cellred)
abline(h=c(0,1), v=c(0,1))
# quadrilateral cell
quad_outline <- quad_cell(0.2, 0.1, n_pnts)
quad_x <- 0.5*(quad_outline[, 1]+0.5)
quad_y <- 00.5*(quad_outline[, 2]+0.5)
#------------------
# plot the progression
# graphics.off()
# one
# png(paste0(savepath, "cell_logo.png"))
blank_plot()
plot_cell(sq_x+0.5, sq_y, cellred)
plot_cell(quad_x, quad_y, cellred)
plot_cell(sq_x+1, sq_y, cellred)
plot_cell(quad_x+0.5, quad_y, cellred)
# quadrilateral cell
quad_outline <- quad_cell(0.2, 0.1, n_pnts)
quad_x <- 0.5*(quad_outline[, 1]+0.5)
quad_y <- 0.5*(quad_outline[, 2]+0.5)
#------------------
# plot the progression
# graphics.off()
# one
# png(paste0(savepath, "cell_logo.png"))
blank_plot()
plot_cell(sq_x+0.5, sq_y, cellred)
plot_cell(quad_x, quad_y, cellred)
plot_cell(1-quad_x, quad_y, cellred)
plot_cell(0.5-quad_x, quad_y, cellred)
blank_plot()
plot_cell(sq_x+0.5, sq_y, cellred)
plot_cell(0.5-quad_x, quad_y, cellred)
abline(h=c(0,1), v=c(0,1))
plot_cell(0.5-quad_x, -quad_y, cellred)
plot_cell(0.5-quad_x, 0.5-quad_y, cellred)
plot_cell(quad_x, 0.5-quad_y, cellred)
blank_plot()
plot_cell(sq_x+0.5, sq_y, cellred)
plot_cell(0.5-quad_x, quad_y, cellred)
plot_cell(quad_x, 0.5-quad_y, cellred)
plot_cell(0.5-quad_x, quad, cellred)
plot_cell(0.5-quad_y, quad_x, cellred)
plot_cell(1-quad_y, 1+quad_x, cellred)
plot_cell(1-quad_y, 0.5+quad_x, cellred)
plot_cell(quad_y, 0.5+quad_x, cellgreen)
plot_cell(1-quad_y, quad_x, cellgreen)
plot_cell(1-quad_y, 0.5-quad_x, cellgreen)
plot_cell(quad_y, 0.5+quad_x, cellgreen)
plot_cell(quad_y, 0.5-quad_x, cellgreen)
plot_cell(0.5+quad_y, 1-quad_x, cellgreen)
blank_plot()
plot_cell(sq_x+0.5, sq_y, cellred)
plot_cell(0.5-quad_x, quad_y, cellgreen)
plot_cell(quad_x, 0.5-quad_y, cellgreen)
plot_cell(1-quad_y, 0.5+quad_x, cellgreen)
plot_cell(0.5+quad_y, 1-quad_x, cellgreen)
plot_cell(sm_tri_x, sm_tri_y, cellgreen)
plot_cell(sm_tri_x, 0.5-sm_tri_y, cellgreen)
plot_cell(sm_tri_x, 0.25-sm_tri_y, cellgreen)
plot_cell(0.25-sm_tri_x, sm_tri_y, cellgreen)
plot_cell(0.75-sm_tri_x, 0.25+sm_tri_y, cellgreen)
plot_cell(0.5-sm_tri_x, 0.25+sm_tri_y, cellgreen)
blank_plot()
plot_cell(sq_x+0.5, sq_y, cellred)
plot_cell(0.5-quad_x, quad_y, cellgreen)
plot_cell(quad_x, 0.5-quad_y, cellgreen)
plot_cell(1-quad_y, 0.5+quad_x, cellgreen)
plot_cell(0.5+quad_y, 1-quad_x, cellgreen)
plot_cell(sm_tri_x, 0.25-sm_tri_y, cellgreen)
plot_cell(0.5-sm_tri_x, 0.25+sm_tri_y, cellgreen)
plot_cell(0.75-sm_tri_x, 0.55+sm_tri_y, cellgreen)
plot_cell(0.75-sm_tri_x, 0.5+sm_tri_y, cellgreen)
plot_cell(0.5+sm_tri_x, 0.75-sm_tri_y, cellgreen)
plot_cell(0.75+sm_tri_x, 01-sm_tri_y, cellgreen)
blank_plot()
plot_cell(sq_x+0.5, sq_y, cellred)
plot_cell(0.5-quad_x, quad_y, cellgreen)
plot_cell(quad_x, 0.5-quad_y, cellgreen)
plot_cell(1-quad_y, 0.5+quad_x, cellgreen)
plot_cell(0.5+quad_y, 1-quad_x, cellgreen)
plot_cell(sm_tri_x, 0.25-sm_tri_y, cellgreen)
plot_cell(0.5-sm_tri_x, 0.25+sm_tri_y, cellgreen)
plot_cell(0.75+sm_tri_x, 1-sm_tri_y, cellgreen)
plot_cell(0.75-sm_tri_x, 0.5+sm_tri_y, cellgreen)
plot_cell(sm_sq_x, 0.5+sm_sq_y, cellgreen)
plot_cell(sm_sq_x, 0.75+sm_sq_y, cellgreen)
plot_cell(0.25+sm_sq_x, 0.5+sm_sq_y, cellgreen)
plot_cell(0.25+sm_sq_x, 0.75+sm_sq_y, cellgreen)
cellfuscia <- c(230/255,54/255,230/255)
blank_plot()
plot_cell(sq_x+0.5, sq_y, cellfuscia)
# quads
plot_cell(0.5-quad_x, quad_y, cellgreen)
plot_cell(quad_x, 0.5-quad_y, cellgreen)
plot_cell(1-quad_y, 0.5+quad_x, cellgreen)
plot_cell(0.5+quad_y, 1-quad_x, cellgreen)
# small tris
plot_cell(sm_tri_x, 0.25-sm_tri_y, cellgreen)
plot_cell(0.5-sm_tri_x, 0.25+sm_tri_y, cellgreen)
plot_cell(0.75+sm_tri_x, 1-sm_tri_y, cellgreen)
plot_cell(0.75-sm_tri_x, 0.5+sm_tri_y, cellgreen)
# small sqs
plot_cell(sm_sq_x, 0.5+sm_sq_y, cellgreen)
plot_cell(sm_sq_x, 0.75+sm_sq_y, cellgreen)
plot_cell(0.25+sm_sq_x, 0.5+sm_sq_y, cellgreen)
plot_cell(0.25+sm_sq_x, 0.75+sm_sq_y, cellgreen)
blank_plot()
plot_cell(0.25+sm_sq_x, 0.5+sm_sq_y, cellgreen)
plot_cell(sm_tri_x, 0.25-sm_tri_y, cellgreen)
plot_cell(0.5-sm_tri_x, 0.25+sm_tri_y, cellgreen)
plot_cell(0.75+sm_tri_x, 1-sm_tri_y, cellgreen)
plot_cell(0.75-sm_tri_x, 0.5+sm_tri_y, cellgreen)
cellfuscia
plot_cell(sq_x+0.5, sq_y, cellfuscia)
plot_cell(0.25+sm_sq_x, 0.5+sm_sq_y, cellfuscia)
plot_cell(0.5-sm_tri_x, 0.25+sm_tri_y, cellfuscia)
plot_cell(0.75-sm_tri_x, 0.5+sm_tri_y, cellfuscia)
plot_cell(0.5-quad_x, quad_y, cellgreen)
plot_cell(quad_x, 0.5-quad_y, cellgreen)
plot_cell(1-quad_y, 0.5+quad_x, cellgreen)
plot_cell(0.5+quad_y, 1-quad_x, cellgreen)
plot_cell(quad_x, 0.5-quad_y, cellgreen)
blank_plot()
# inner
plot_cell(sq_x+0.5, sq_y, cellgreen)
# middle
plot_cell(0.25+sm_sq_x, 0.5+sm_sq_y, cellfuscia)
plot_cell(0.5-sm_tri_x, 0.25+sm_tri_y, cellfuscia)
plot_cell(0.75-sm_tri_x, 0.5+sm_tri_y, cellfuscia)
plot_cell(0.5+quad_y, 1-quad_x, cellfuscia)
# outer
plot_cell(quad_x, 0.5-quad_y, cellgreen)
plot_cell(0.5-quad_x, quad_y, cellgreen)
plot_cell(1-quad_y, 0.5+quad_x, cellgreen)
plot_cell(sm_tri_x, 0.25-sm_tri_y, cellgreen)
plot_cell(0.75+sm_tri_x, 1-sm_tri_y, cellgreen)
plot_cell(sm_sq_x, 0.5+sm_sq_y, cellgreen)
plot_cell(sm_sq_x, 0.75+sm_sq_y, cellgreen)
plot_cell(0.25+sm_sq_x, 0.75+sm_sq_y, cellgreen)
plot_cell(quad_x, 0.5-quad_y, cellfuscia)
plot_cell(sq_x+0.5, sq_y, cellred)
plot_cell(sq_x+0.5, sq_y, cellblue)
cellblue <- c(34/255,142/255,250/255)
plot_cell(sq_x+0.5, sq_y, cellblue)
blank_plot()
# inner
plot_cell(sq_x+0.5, sq_y, cellfuscia)
# middle
plot_cell(0.25+sm_sq_x, 0.5+sm_sq_y, cellblue)
plot_cell(0.5-sm_tri_x, 0.25+sm_tri_y, cellblue)
plot_cell(0.75-sm_tri_x, 0.5+sm_tri_y, cellblue)
plot_cell(0.5+quad_y, 1-quad_x, cellblue)
plot_cell(quad_x, 0.5-quad_y, cellblue)
# outer
plot_cell(0.5-quad_x, quad_y, cellgreen)
plot_cell(1-quad_y, 0.5+quad_x, cellgreen)
plot_cell(sm_tri_x, 0.25-sm_tri_y, cellgreen)
plot_cell(0.75+sm_tri_x, 1-sm_tri_y, cellgreen)
plot_cell(sm_sq_x, 0.5+sm_sq_y, cellgreen)
plot_cell(sm_sq_x, 0.75+sm_sq_y, cellgreen)
plot_cell(0.25+sm_sq_x, 0.75+sm_sq_y, cellgreen)
blank_plot()
# inner
plot_cell(sq_x+0.5, sq_y, cellfuscia)
# middle
plot_cell(0.25+sm_sq_x, 0.5+sm_sq_y, cellgreen)
plot_cell(0.5-sm_tri_x, 0.25+sm_tri_y, cellgreen)
plot_cell(0.75-sm_tri_x, 0.5+sm_tri_y, cellgreen)
plot_cell(0.5+quad_y, 1-quad_x, cellgreen)
plot_cell(quad_x, 0.5-quad_y, cellgreen)
# outer
plot_cell(0.5-quad_x, quad_y, cellgreen)
plot_cell(1-quad_y, 0.5+quad_x, cellgreen)
plot_cell(sm_tri_x, 0.25-sm_tri_y, cellgreen)
plot_cell(0.75+sm_tri_x, 1-sm_tri_y, cellgreen)
plot_cell(sm_sq_x, 0.5+sm_sq_y, cellgreen)
plot_cell(sm_sq_x, 0.75+sm_sq_y, cellgreen)
plot_cell(0.25+sm_sq_x, 0.75+sm_sq_y, cellgreen)
#------------------
# logo
graphics.off()
png(paste0(savepath, "cell_logo.png"))
blank_plot()
# inner
plot_cell(sq_x+0.5, sq_y, cellfuscia)
# middle
plot_cell(0.25+sm_sq_x, 0.5+sm_sq_y, cellgreen)
plot_cell(0.5-sm_tri_x, 0.25+sm_tri_y, cellgreen)
plot_cell(0.75-sm_tri_x, 0.5+sm_tri_y, cellgreen)
plot_cell(0.5+quad_y, 1-quad_x, cellgreen)
plot_cell(quad_x, 0.5-quad_y, cellgreen)
# outer
plot_cell(0.5-quad_x, quad_y, cellgreen)
plot_cell(1-quad_y, 0.5+quad_x, cellgreen)
plot_cell(sm_tri_x, 0.25-sm_tri_y, cellgreen)
plot_cell(0.75+sm_tri_x, 1-sm_tri_y, cellgreen)
plot_cell(sm_sq_x, 0.5+sm_sq_y, cellgreen)
plot_cell(sm_sq_x, 0.75+sm_sq_y, cellgreen)
plot_cell(0.25+sm_sq_x, 0.75+sm_sq_y, cellgreen)
dev.off()
